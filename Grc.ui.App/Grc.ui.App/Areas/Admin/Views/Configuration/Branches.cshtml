@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Branches";
}

@model AdminDashboardModel
@{
    var component = new PageComponentViewModel {
        ComponentId = $"1",
        ComponentKey = "Branches",
        LeftActions = new List<ComponentAction> {
            new ComponentAction { ActionKey = ActionKey.Search.GetDescription(), Icon = "mdi mdi-magnify", Tooltip = ILocalize.GetLocalizedLabel("App.Label.Search") },
            new ComponentAction { ActionKey = ActionKey.Separator.GetDescription()},
            new ComponentAction { ActionKey = ActionKey.New.GetDescription(), Icon = "mdi mdi-plus", Tooltip = ILocalize.GetLocalizedLabel("App.Label.New") },
            new ComponentAction { ActionKey = ActionKey.Edit.GetDescription(), Icon = "mdi mdi-pencil", Tooltip = ILocalize.GetLocalizedLabel("App.Label.Edit") },
            new ComponentAction { ActionKey = ActionKey.Delete.GetDescription(), Icon = "mdi mdi-delete", Tooltip = ILocalize.GetLocalizedLabel("App.Label.Delete") },
            new ComponentAction { ActionKey = ActionKey.Separator.GetDescription()},
            new ComponentAction { ActionKey = ActionKey.Departments.GetDescription(), Icon = "mdi mdi-gamepad-circle-outline", Tooltip = ILocalize.GetLocalizedLabel("App.Label.Departments") },
        }
    };
}

<!-- branch -->
@await Component.InvokeAsync("BaseComponent", new { model = component, content = Component.InvokeAsync("BranchList") })


<!-- departments -->
@await Component.InvokeAsync("PopupPage", new { title = "Departments", name = ComponentKey.Departments.GetDescription(), content = Component.InvokeAsync("DepartmentList"), level = 0 })

